<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbYeni.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>